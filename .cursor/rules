# Cursor AI Rules for Muguet Project

## 프로젝트 개요
- Next.js 14 기반의 크리에이터 마케팅 플랫폼
- TypeScript, Tailwind CSS, Supabase 사용
- 다크 테마, 미니멀 디자인

## 코딩 스타일
- TypeScript strict 모드 사용
- 함수형 컴포넌트와 React Hooks 사용
- Tailwind CSS 클래스명은 한 줄에 최대 3-4개까지
- 컴포넌트는 PascalCase, 파일명은 kebab-case
- 상수는 UPPER_SNAKE_CASE

## 파일 구조
- `/app` - Next.js App Router 페이지
- `/components` - 재사용 가능한 컴포넌트
- `/lib` - 유틸리티 함수, 훅, 스토어
- `/data` - 정적 데이터
- `/types` - TypeScript 타입 정의

## 네이밍 컨벤션
- 컴포넌트: `PascalCase` (예: `FeatureCard`)
- 파일명: `kebab-case` (예: `feature-card.tsx`)
- 변수/함수: `camelCase` (예: `handleClick`)
- 상수: `UPPER_SNAKE_CASE` (예: `API_BASE_URL`)

## 색상 시스템
- Primary: Green (green-400, green-500, green-600)
- Secondary: Orange (orange-500, orange-600)
- Background: Gray (gray-900, gray-800)
- Status: Red (error), Yellow (warning), Blue (info)

## 컴포넌트 작성 규칙
- Props 인터페이스는 컴포넌트 위에 정의
- 기본값은 destructuring에서 설정
- 이벤트 핸들러는 `handle` 접두사 사용
- 조건부 렌더링은 명확하게 작성

## 에러 처리
- try-catch 블록으로 에러 처리
- 사용자에게 명확한 에러 메시지 표시
- 로딩 상태 관리

## 접근성
- 시맨틱 HTML 사용
- 키보드 네비게이션 지원
- 적절한 ARIA 라벨 사용
- 색상 대비 고려

## 성능
- 이미지 최적화 (next/image 사용)
- 코드 스플리팅 고려
- 불필요한 리렌더링 방지
- 메모이제이션 적절히 사용

## 보안
- 사용자 입력 검증 (Zod 사용)
- XSS 방지
- CSRF 보호
- 환경 변수 보안

## 테스트
- 단위 테스트 작성
- 통합 테스트 고려
- E2E 테스트 (필요시)

## 문서화
- 복잡한 로직에 주석 추가
- README 업데이트
- API 문서화
- 컴포넌트 사용법 문서화
